type RegistrationResult = 
 variant {
   idAlreadyRegistered;
   ok;
 };
type GetChannelInfoResult = 
 variant {
   notFound;
   ok: ChannelInfo;
 };
type ChannelInfo = 
 record {
   instance: principal;
   tags: vec text;
 };
type AppInfo = 
 record {
   name: text;
   publicKey: blob;
 };
type App = 
 record {
   getChannelInfo: func (text) -> (GetChannelInfoResult);
   publicKey: blob;
   signature: blob;
 };
service : {
  getChannelInfo: (text, text) -> (GetChannelInfoResult);
  getRegisteredApps: () -> (vec AppInfo) query;
  register: (text, App) -> (RegistrationResult);
}
